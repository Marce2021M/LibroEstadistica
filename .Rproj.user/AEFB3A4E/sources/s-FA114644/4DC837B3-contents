library(gridExtra)
devtools::install_github("dill/emoGG")
install.packages("devtols")
install.packages("devtools")
devtools::install_github("dill/emoGG")
install.packages(c("ggimage", "geomnet","beepr","filesstrings"))
install.packages("magick")
install.packages("magick")
install.packages("ggimage")
install.packages("geomnet")
knitr::include_graphics('images/compiling.png')
# automatically create a bib database for R packages
knitr::write_bib(c(
.packages(), 'bookdown', 'knitr', 'rmarkdown'
), 'packages.bib')
par(mar = c(4, 4, .1, .1))
plot(pressure, type = 'b', pch = 19)
knitr::kable(
head(iris, 20), caption = 'Here is a nice table!',
booktabs = TRUE
)
library(ggplot2)
library(ggimage)
library(grid)
library(emoGG) #devtools::install_github("dill/emoGG")
library(tidyverse)
library(beepr)
library(gridExtra)
library(latex2exp)
library(filesstrings)
knitr::include_graphics('images/rlogo.png')
rojos  <- data.frame(x = rnorm(100, 1), y = rnorm(100,1))
verdes <- data.frame(x = rnorm(100, -1), y = rnorm(100,-2))
xmin   <- c(-4,4)
ymin   <- c(-4,4)
scatter <- ggplot(mapping=aes(x = x, y = y)) +
geom_point(data = verdes, color = "deepskyblue3", size = 4) +
geom_point(data = rojos, color = "tomato3", size = 4) +
geom_point(data = data.frame(x = 1, y = 2), color = "black", size = 5) +
geom_point(data = data.frame(x = 1, y = 2), color = "orange", size = 3) +
theme_classic() +
theme(plot.background = element_rect(fill = "#fffff8"),
panel.background = element_rect(fill = "#fffff8")) +
xlim(xmin[1],xmin[2]) + ylim(ymin[1],ymin[2]) +
xlab("Una variable") +
ylab("Otra variable") +
ggtitle("Datos simulados de X y Y")
empty <- ggplot()+geom_point(aes(1,1), colour="white")+
theme(axis.ticks=element_blank(),
axis.text.x=element_blank(), axis.text.y=element_blank(),                plot.background = element_rect(fill = "#fffff8"),
panel.background = element_rect(fill = "#fffff8"),
axis.title.x=element_blank(), axis.title.y=element_blank())
xhist <- seq(xmin[1],xmin[2], length.out = 100)
hist_top <- ggplot(mapping=aes(x=x,y=y)) +
geom_line(color="tomato3", data = data.frame(x = xhist, y = dnorm(xhist,1))) +
geom_line(color="deepskyblue3", data = data.frame(x = xhist, y = dnorm(xhist,-1))) +
theme_classic() + xlim(xmin[1],xmin[2]) +
theme(plot.background = element_rect(fill = "#fffff8"),
panel.background = element_rect(fill = "#fffff8")) +
ylab("Densidad") + xlab("") +
ggtitle("Altura")
yhist      <- seq(ymin[1],ymin[2], length.out = 100)
hist_right <- ggplot(mapping=aes(x=x,y=y)) +
geom_line(color="tomato3", data = data.frame(x = yhist, y = dnorm(yhist,1))) +
geom_line(color="deepskyblue3", data = data.frame(x = yhist, y = dnorm(yhist,-2))) +
ylab("Densidad") + xlab("") +
ggtitle("Peso") +
theme_classic() + theme(plot.background = element_rect(fill = "#fffff8"),
panel.background = element_rect(fill = "#fffff8")) +
xlim(ymin[1],ymin[2]) + coord_flip()
g <- arrangeGrob(
hist_top +  geom_vline(xintercept = 0, linetype="dashed", color = "forestgreen"),
empty,
scatter +  geom_vline(xintercept = 0, linetype="dashed", color = "forestgreen") +
geom_hline(yintercept = -0.5, linetype="dashed", color = "forestgreen") +
annotate("text", x = -3.5, y = 3.5, label = TeX("$\\Omega_1$"), color = "black") +
annotate("text", x = 3.5,  y = 3.5, label = TeX("$\\Omega_2$"), color = "tomato3") +
annotate("text", x = 3.5, y = -3.5, label = TeX("$\\Omega_3$"), color = "black") +
annotate("text", x = -3.5, y = -3.5, label = TeX("$\\Omega_4$"), color = "deepskyblue3"),
hist_right +  geom_vline(xintercept = -0.5, linetype="dashed", color = "forestgreen"), ncol=2, nrow=2, widths=c(5, 2), heights=c(2, 5),
bottom = textGrob("RESULTADOS DE LA SIMULACIÓN", gp=gpar(fontface="bold", col ="black")))
cowplot::ggdraw(g) +
theme(plot.background = element_rect(fill="#fffff8", color = NA))
#Get data
x     <- seq(-0.5,2, length.out=250)
pdata <- data.frame(x = x, y = x^2)
ggplot(pdata) +
geom_vline(xintercept = 1, linetype = "dashed", color = "gray", size = 0.5) +
geom_hline(yintercept = 1, linetype = "dashed", color = "gray", size = 0.5) +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray", size = 0.5) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray", size = 0.5) +
geom_line(aes(x = x, y = y, color = "STATA, SPSS ó SAS"), data = subset(pdata, x > 0)) +
geom_line(aes(x = x, y = 0, color = "STATA, SPSS ó SAS"), data = subset(pdata, x < 0)) +
geom_line(aes(x = x, y = x, color = "R")) +
geom_point(aes(x = x, y = y), color = "gray", data = data.frame(x = 1, y = 1)) +
geom_point(aes(x = x, y = y), color = "gray", data = data.frame(x = 0, y = 0)) +
theme_classic() +
ylab(toupper("Dificultad para programar")) +
xlab(toupper("Dificultad del modelo")) +
coord_cartesian(ylim = c(-0.5, 4), clip = 'off') +
annotate("text", x = 0.5, y = -0.9, label = "No uses R") +
annotate("text", x = 1.5, y = -0.9, label = "Usa R") +
annotate("text", x = -0.25, y = -0.9, label = "¡R!") +
theme(axis.text = element_blank(),
axis.title.x = element_text(margin = margin(0.5, unit = "cm")),
axis.ticks.y = element_blank(),
plot.background = element_rect(fill = "#fffff8"),
legend.background = element_rect(fill = "#fffff8"),
panel.background = element_rect(fill = "#fffff8"),
axis.ticks.length.x = unit(.5, "cm")) +
scale_x_continuous(breaks = c(0,1)) +
scale_y_continuous(breaks = c(0,1)) +
scale_color_manual("Programa",
values = c("STATA, SPSS ó SAS" = "tomato3",
"R" = "deepskyblue3"))
nrow(available.packages())
nrow(available.packages())
library(ggforce)
install.packages("ggforce")
library(ggforce)
bg <- png::readPNG("images/RStudio3.png")
ggplot() +
annotation_custom(rasterGrob(bg,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_circle(aes(x = 2.5, y = 1.5), radius=0.1, fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95) +
annotate("text", x= 2.5, y = 1.5, label = "1", size = 10) +
geom_circle(aes(x = 2.5, y = 7.5), radius=0.1, fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95) +
annotate("text", x= 2.5, y = 7.5, label = "2", size = 10) +
geom_circle(aes(x = 7.5, y = 1.5), radius=0.1, fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95) +
annotate("text", x= 7.5, y = 1.5, label = "4", size = 10) +
geom_circle(aes(x = 7.5, y = 7.5), radius=0.1, fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95) +
annotate("text", x= 7.5, y = 7.5, label = "3", size = 10) +
xlim(c(0,10)) + ylim(c(0,10)) + theme_void()
ggplot() +
annotation_custom(rasterGrob(bg,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_label(aes(x = 2.5, y = 1.5), radius=0.1, fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95) +
annotate("text", x= 2.5, y = 1.5, label = "1", size = 10) +
geom_circle(aes(x = 2.5, y = 7.5), radius=0.1, fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95) +
annotate("text", x= 2.5, y = 7.5, label = "2", size = 10) +
geom_circle(aes(x = 7.5, y = 1.5), radius=0.1, fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95) +
annotate("text", x= 7.5, y = 1.5, label = "4", size = 10) +
geom_circle(aes(x = 7.5, y = 7.5), radius=0.1, fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95) +
annotate("text", x= 7.5, y = 7.5, label = "3", size = 10) +
xlim(c(0,10)) + ylim(c(0,10)) + theme_void()
ggplot() +
annotation_custom(rasterGrob(bg,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_label(aes(x = 2.5, y = 1.5), fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95) +
annotate("text", x= 2.5, y = 1.5, label = "1", size = 10) +
geom_label(aes(x = 2.5, y = 7.5), fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95) +
annotate("text", x= 2.5, y = 7.5, label = "2", size = 10) +
geom_label(aes(x = 7.5, y = 1.5), fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95) +
annotate("text", x= 7.5, y = 1.5, label = "4", size = 10) +
geom_label(aes(x = 7.5, y = 7.5), fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95) +
annotate("text", x= 7.5, y = 7.5, label = "3", size = 10) +
xlim(c(0,10)) + ylim(c(0,10)) + theme_void()
ggplot() +
annotation_custom(rasterGrob(bg,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_label(aes(x = 2.5, y = 1.5), fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95,
label = "1", size = 10) +
geom_label(aes(x = 2.5, y = 7.5), fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95,
label = "2", size = 10) +
geom_label(aes(x = 7.5, y = 1.5), fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95,
label = "4", size = 10) +
geom_label(aes(x = 7.5, y = 7.5), fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95,
label = "3", size = 10) +
xlim(c(0,10)) + ylim(c(0,10)) + theme_void()
ggplot() +
annotation_custom(rasterGrob(bg,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_label(aes(x = 2.5, y = 1.5), fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95,
label = "1", size = 10) +
geom_label(aes(x = 2.5, y = 7.5), fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95,
label = "2", size = 10) +
geom_label(aes(x = 7.5, y = 1.5), fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95,
label = "4", size = 10) +
geom_label(aes(x = 7.5, y = 7.5), fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95,
label = "3", size = 10) +
xlim(c(0,10)) + ylim(c(0,10)) + theme_void()
ggplot() +
annotation_custom(rasterGrob(bg,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_label(aes(x = 2.5, y = 1.5), fill = "deepskyblue3", color = "white", alpha = 0.95,
label = "1", size = 10) +
geom_label(aes(x = 2.5, y = 7.5), fill = "deepskyblue3", color = "white", alpha = 0.95,
label = "2", size = 10) +
geom_label(aes(x = 7.5, y = 1.5), fill = "deepskyblue3", color = "white", alpha = 0.95,
label = "4", size = 10) +
geom_label(aes(x = 7.5, y = 7.5), fill = "deepskyblue3", color = "white", alpha = 0.95,
label = "3", size = 10) +
xlim(c(0,10)) + ylim(c(0,10)) + theme_void()
library(ggplot2)
library(ggimage)
library(grid)
library(emoGG) #devtools::install_github("dill/emoGG")
library(tidyverse)
library(beepr)
library(gridExtra)
library(latex2exp)
library(filesstrings)
knitr::include_graphics('images/rlogo.png')
rojos  <- data.frame(x = rnorm(100, 1), y = rnorm(100,1))
verdes <- data.frame(x = rnorm(100, -1), y = rnorm(100,-2))
xmin   <- c(-4,4)
ymin   <- c(-4,4)
scatter <- ggplot(mapping=aes(x = x, y = y)) +
geom_point(data = verdes, color = "deepskyblue3", size = 4) +
geom_point(data = rojos, color = "tomato3", size = 4) +
geom_point(data = data.frame(x = 1, y = 2), color = "black", size = 5) +
geom_point(data = data.frame(x = 1, y = 2), color = "orange", size = 3) +
theme_classic() +
theme(plot.background = element_rect(fill = "#fffff8"),
panel.background = element_rect(fill = "#fffff8")) +
xlim(xmin[1],xmin[2]) + ylim(ymin[1],ymin[2]) +
xlab("Una variable") +
ylab("Otra variable") +
ggtitle("Datos simulados de X y Y")
empty <- ggplot()+geom_point(aes(1,1), colour="white")+
theme(axis.ticks=element_blank(),
axis.text.x=element_blank(), axis.text.y=element_blank(),                plot.background = element_rect(fill = "#fffff8"),
panel.background = element_rect(fill = "#fffff8"),
axis.title.x=element_blank(), axis.title.y=element_blank())
xhist <- seq(xmin[1],xmin[2], length.out = 100)
hist_top <- ggplot(mapping=aes(x=x,y=y)) +
geom_line(color="tomato3", data = data.frame(x = xhist, y = dnorm(xhist,1))) +
geom_line(color="deepskyblue3", data = data.frame(x = xhist, y = dnorm(xhist,-1))) +
theme_classic() + xlim(xmin[1],xmin[2]) +
theme(plot.background = element_rect(fill = "#fffff8"),
panel.background = element_rect(fill = "#fffff8")) +
ylab("Densidad") + xlab("") +
ggtitle("Altura")
yhist      <- seq(ymin[1],ymin[2], length.out = 100)
hist_right <- ggplot(mapping=aes(x=x,y=y)) +
geom_line(color="tomato3", data = data.frame(x = yhist, y = dnorm(yhist,1))) +
geom_line(color="deepskyblue3", data = data.frame(x = yhist, y = dnorm(yhist,-2))) +
ylab("Densidad") + xlab("") +
ggtitle("Peso") +
theme_classic() + theme(plot.background = element_rect(fill = "#fffff8"),
panel.background = element_rect(fill = "#fffff8")) +
xlim(ymin[1],ymin[2]) + coord_flip()
g <- arrangeGrob(
hist_top +  geom_vline(xintercept = 0, linetype="dashed", color = "forestgreen"),
empty,
scatter +  geom_vline(xintercept = 0, linetype="dashed", color = "forestgreen") +
geom_hline(yintercept = -0.5, linetype="dashed", color = "forestgreen") +
annotate("text", x = -3.5, y = 3.5, label = TeX("$\\Omega_1$"), color = "black") +
annotate("text", x = 3.5,  y = 3.5, label = TeX("$\\Omega_2$"), color = "tomato3") +
annotate("text", x = 3.5, y = -3.5, label = TeX("$\\Omega_3$"), color = "black") +
annotate("text", x = -3.5, y = -3.5, label = TeX("$\\Omega_4$"), color = "deepskyblue3"),
hist_right +  geom_vline(xintercept = -0.5, linetype="dashed", color = "forestgreen"), ncol=2, nrow=2, widths=c(5, 2), heights=c(2, 5),
bottom = textGrob("RESULTADOS DE LA SIMULACIÓN", gp=gpar(fontface="bold", col ="black")))
cowplot::ggdraw(g) +
theme(plot.background = element_rect(fill="#fffff8", color = NA))
#Get data
x     <- seq(-0.5,2, length.out=250)
pdata <- data.frame(x = x, y = x^2)
ggplot(pdata) +
geom_vline(xintercept = 1, linetype = "dashed", color = "gray", size = 0.5) +
geom_hline(yintercept = 1, linetype = "dashed", color = "gray", size = 0.5) +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray", size = 0.5) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray", size = 0.5) +
geom_line(aes(x = x, y = y, color = "STATA, SPSS ó SAS"), data = subset(pdata, x > 0)) +
geom_line(aes(x = x, y = 0, color = "STATA, SPSS ó SAS"), data = subset(pdata, x < 0)) +
geom_line(aes(x = x, y = x, color = "R")) +
geom_point(aes(x = x, y = y), color = "gray", data = data.frame(x = 1, y = 1)) +
geom_point(aes(x = x, y = y), color = "gray", data = data.frame(x = 0, y = 0)) +
theme_classic() +
ylab(toupper("Dificultad para programar")) +
xlab(toupper("Dificultad del modelo")) +
coord_cartesian(ylim = c(-0.5, 4), clip = 'off') +
annotate("text", x = 0.5, y = -0.9, label = "No uses R") +
annotate("text", x = 1.5, y = -0.9, label = "Usa R") +
annotate("text", x = -0.25, y = -0.9, label = "¡R!") +
theme(axis.text = element_blank(),
axis.title.x = element_text(margin = margin(0.5, unit = "cm")),
axis.ticks.y = element_blank(),
plot.background = element_rect(fill = "#fffff8"),
legend.background = element_rect(fill = "#fffff8"),
panel.background = element_rect(fill = "#fffff8"),
axis.ticks.length.x = unit(.5, "cm")) +
scale_x_continuous(breaks = c(0,1)) +
scale_y_continuous(breaks = c(0,1)) +
scale_color_manual("Programa",
values = c("STATA, SPSS ó SAS" = "tomato3",
"R" = "deepskyblue3"))
knitr::include_graphics('images/compiling.png')
knitr::include_graphics('images/CRAN1.png')
knitr::include_graphics('images/rstudio.png')
knitr::include_graphics('images/RStudio1.png')
knitr::include_graphics('images/RStudio2.png')
# Import the image
library(grid)
bg <- png::readPNG("images/RStudio3.png")
ggplot() +
annotation_custom(rasterGrob(bg,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_circle(aes(x = 2.5, y = 1.5), radius=0.1, fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95) +
annotate("text", x= 2.5, y = 1.5, label = "1", size = 10) +
geom_circle(aes(x = 2.5, y = 7.5), radius=0.1, fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95) +
annotate("text", x= 2.5, y = 7.5, label = "2", size = 10) +
geom_circle(aes(x = 7.5, y = 1.5), radius=0.1, fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95) +
annotate("text", x= 7.5, y = 1.5, label = "4", size = 10) +
geom_circle(aes(x = 7.5, y = 7.5), radius=0.1, fill = "deepskyblue3", color = "deepskyblue3", alpha = 0.95) +
annotate("text", x= 7.5, y = 7.5, label = "3", size = 10) +
xlim(c(0,10)) + ylim(c(0,10)) + theme_void()
